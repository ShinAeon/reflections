What happens when you initialize a repository? Why do you need to do it?
it creates the .git metadata folder so git will recognize the directory as a repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging is where changes reside until a commit is made.
The working directory contains unchanged files and unstaged changes.
The staging area allows you to seperate changes into multiple commits.
The staging area also allows you to review staged changes before they are commited.

How can you use the staging area to make sure you have one commit per logical
change?
By only adding the files you want to commit to the staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches would help keep history organized with multiple developers or multiple changes worked in parallel
by isolating those changes from other branches.


How do the diagrams help you visualize the branch structure?
Diagramming helps to keep track of the nonlinear branch structure used by Git

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
merging two branches together incorporates the changes from both branches into one branch.
We represent it like a tree in a diagram because it's intuitive

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Pros:
Git's automatic merging makes the simplifies the tediousness of merging simple changes in a files
Automatic merging also makes isolating conflicts easier when a manual merge is necessary

Cons:
Automatic merge isn't bullet proof
Automatic merge can't always figure things out so you'll sitll have some manual stuff to do
