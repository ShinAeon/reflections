When would you want to create a remote repository rather than keeping all your work local?
  A remote repository would be useful for multiple developers working on the same project; 
    especially if one or more of them work remotely from others
  A remote repository allows a project to be backed up to the cloud as well

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You may not want to pull remote changes to your repository because of something you are working on

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are for creating a copy of another GitHub repository on your own GitHub account
    Clones are for creating a copy of another local repository or a remote repository on your working machine.
    Branches are for creating a different "working path" within a repository

What is the benefit of having a copy of the last known state of the remote
stored locally?

    having a local copy of the last known state of the remote allows git to know when local branches are ahead or 
      behind or out of sync with that state

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Collaborating without some kind of versino control system is nearly impossible
    Collaborating with git and  githib is ideal because the code bas e ins't bound by geography

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When multiple developers are working within the same code base working in a separate brance safely isolates 
    each developer's code changes from one another until they are ready to be a part of the stable code base.
    Too, the use of separate branches allows for fast context switching when developing multiple features in 
    parallel.
